// g++ testpwn.cpp -o testpwn  -fstack-protector
//strip testpwn
#include <iostream>
#include <cstring>
#include<unistd.h>
#include <string.h>

using namespace std;


void* ptr[10];
int size[10];


void logo()
{
	cout << "**********************************" << endl;
	cout << "z2o          C++ game          z2o" << endl;
	cout << "**********************************" << endl;
}

void init()
{
	setbuf(stdin, NULL);
	setbuf(stdout, NULL);
	setbuf(stderr, NULL);

}

class game
{
public:
	virtual void getshell()                        //需要子类实现
    {
        cout << "NO！NO！NO！" << endl;
	}

	virtual void add() //  默认实现
	{
		int i,idx, sz;
		int j = 0;
		for (i = 0; i < 10; i++)
		{
			if (ptr[i] != 0)
				j = j + 1;
		}

		for (i = j; i < 10; ++i) {
			puts("input size ?");
			scanf("%d%*c", &sz);
			if (sz > 0x200)
				sz = 0x200;
			size[i] = sz;
			ptr[i] = malloc(sz);
			return;
		}
		
	}
	virtual void edit() {
		int idx;
		char buf[0x200];
		puts("index?");
		scanf("%d", &idx);
		puts("data:");
		if (idx >= 0 && idx < 10 && ptr[idx] != 0 && size[idx] != 0)
			read(0, buf, size[idx]);
		    strncpy((char*)ptr[idx], buf, size[idx] - 1);
		puts("done!");

		
	}

	virtual void delte() {
		int idx;
		puts("index?");
		scanf("%d%*c", &idx);
		if (idx >= 0 && idx < 10 && ptr[idx]!=0)
			free(ptr[idx]);
		    ptr[idx] = 0;
			size[idx] = 0;
		puts("done!");
	}

	virtual void byebye() {

		cout << "good bye!!!" << endl;
	}

	virtual void print_rules() //普通函数
	{
		puts("hello, game1!");
		puts("1.new node...");
		puts("2.edit node...");
		puts("3.delete node...");
		puts("4.exit...");
		printf("choose:");

	}

};



class upgradegame : public game
{
public:
	void getshell() {
		puts("further on!");
		printf("what's this ? %p \n",&logo);	
	}
                                         //继承两个虚函数


	 void edit() {
		 int idx;
		 char buf[0x200];
		 puts("index?");
		 scanf("%d", &idx);
		 if (idx >= 0 && idx < 10 && ptr[idx] != 0 && size[idx] != 0)
			 read(0, buf, size[idx]);
		     strncpy((char*)&ptr[idx], buf, size[idx] - 1);
	     puts("done!");


	 }


	 void print_rules() //普通函数
	 {
		 puts("hello, game2!");
		 puts("1.new node...");
		 puts("2.edit node...");
		 puts("3.delete node...");
		 puts("4.exit...");
		 printf("choose:");

	 }
};






       

int main()
{
	init();
	logo();

	game* game1 = new game;
	game* temp = new game;
	upgradegame* game2 = new upgradegame;

	memset(ptr, 0, sizeof(ptr));

	while (1)
	{
		game1->print_rules();

		int n;
		scanf("%d", &n);
		switch (n)
		{
		case 1:
			game1->add();
			break;
		case 2:
			game1->edit();
			break;
		case 3:
			game1->delte();
			break;
		case 4:
			game1->byebye();
			exit(0);
		case 5:
			temp = game1;
			game1 = game2;   //exchange game
			game2 = (upgradegame*)temp;
			break;
		case 6:
			game1->getshell();
			break;
		default:
			puts("resume load");
			break;
		}
	}
}
